# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI Testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    env:
      ROCKET_ADE: '{authorization="${{ secrets.ADE_AUTHORIZATION }}"}'
      ROCKET_REDIS: '{url="redis://localhost:6379"}'
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
        - 6379:6379
    defaults:
      run:
        working-directory: ./backend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - run: cargo test
  build:
    runs-on: ubuntu-latest
    env:
      ADE_AUTHORIZATION: ${{ secrets.ADE_AUTHORIZATION }}
      ADE_DATA: ${{ secrets.ADE_DATA }}
      ADE_DB_PATH: postgresql://postgres@localhost:5432
      ADE_FAKE_API: true
      ADE_URL: ${{ secrets.ADE_URL }}
      FLASK_APP: app.py
      FLASK_ENV: production
      FLASK_SALT: any
      FLASK_SECRET_KEY: any
      MAIL_ADMIN: admin@localhost
      MAIL_SERVER: localhost
      MAIL_USERNAME: no-reply@localhost
      UCLOUVAIN_CLIENT_ID: ${{ secrets.UCLOUVAIN_CLIENT_ID }}
      UCLOUVAIN_CLIENT_SECRET: ${{ secrets.UCLOUVAIN_CLIENT_SECRET }}
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          #POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 6379:6379
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: 16.15.1
        cache-dependency-path: frontend/package-lock.json

    - name: Install Node dependencies
      working-directory: ./frontend
      run: |
        npm install
