# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI Testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    env:
      ROCKET_ADE: '{authorization="${{ secrets.ADE_AUTHORIZATION }}"}'
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - run: cargo test
  build:
    runs-on: ubuntu-latest
    env:
      ADE_AUTHORIZATION: ${{ secrets.ADE_AUTHORIZATION }}
      ADE_DATA: ${{ secrets.ADE_DATA }}
      ADE_DB_PATH: postgresql://postgres@localhost:5432
      ADE_FAKE_API: true
      ADE_URL: ${{ secrets.ADE_URL }}
      FLASK_APP: app.py
      FLASK_ENV: production
      FLASK_SALT: any
      FLASK_SECRET_KEY: any
      MAIL_ADMIN: admin@localhost
      MAIL_SERVER: localhost
      MAIL_USERNAME: no-reply@localhost
      UCLOUVAIN_CLIENT_ID: ${{ secrets.UCLOUVAIN_CLIENT_ID }}
      UCLOUVAIN_CLIENT_SECRET: ${{ secrets.UCLOUVAIN_CLIENT_SECRET }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          #POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 6379:6379
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        python -m pip install --upgrade pip
        python -m pip install -r dev-requirements.txt
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: 10.23.0
    - name: Install dependencies
      run: |
        npm install
    - name: Before script
      run: |
        wget --no-check-certificate "https://docs.google.com/uc?export=download&id=1E8zboqLDRdufXnXZJUrLnSLih_ATaekO" -O api.zip
        unzip api.zip
        psql -c 'create database travis_ci_test;' -U postgres -W --host=localhost
        flask sql init
        flask redis update
        npm run build
    - name: Test with pytest
      run: |
        pytest
